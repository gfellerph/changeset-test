name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        id: store
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: status
        run: pnpm changeset status --verbose

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: pnpm fake-publish

        # This action scans all package.json files and checks if any of them are on a clean major version
        # This usually means, that they had a major release recently. It's the only way to detect if a major release really happened
        # Problem with this solution
        # - any push to main after a major release will return true, not just the first
      - name: Find package.json files and check version
        # if : steps.changesets.outputs.published == 'true'
        id: check_version
        run: |
          result=false
          files=$(find ./packages -name 'package.json' -not -path '*/node_modules/*')
          for file in $files; do
            version=$(jq -r '.version' $file)
            if [[ $version == *".0.0" ]]; then
              result=true
              break
            fi
          done
          echo "match=$result" >> $GITHUB_OUTPUT

      - name: Is there a major release?
        #if : steps.changesets.outputs.published == 'true'
        run: echo "Version pattern match ${{ steps.check_version.outputs.match }}"
